

bintohex()
{
  bintodec $1 | dectohex
}
bintoutf()
{
  bintodec $1 | dectoutf
}
hextobin()
{
  hextodec $1 | dectobin
}
hextoutf()
{
  hextodec $1 | dectoutf
}
utftobin()
{
  utftodec $1 | dectobin
}
utftohex()
{
  utftodec $1 | dectohex
}


att()
{
	tmux attach -t $1
}


c()
{
	if [[ -d "$1" ]]; then
		cd $1
	elif [[ -f "$1" ]]; then
		cat $1
	else
		clear
	fi
}

cd()
{
    builtin cd $1
    tmux refresh-client -S
}



commit()
{
    message=$*
    if [ -z "$message" ]; then
    echo "Add a message"
    return 1
    fi
    git commit -am "$message"
}


dt()
{
	CONTADOR=0

	while [ "$*" ]
	do
		if [[ $1 == "default" ]]; then
		  shift
		else
		  let CONTADOR=$CONTADOR+1
		  tmux new-session -d -s $1
	shift
	fi	
	done
}


e()
{
	if [[ -z "$1" ]]; then
		pluma &
	else
		if [[ -f "$1" ]]; then
			if [[ ! -z $(echo "$1" | grep -Fo "/") ]]; then
				dir=$(echo "$1" | rev | cut -d '/' -f2- | rev)
				echo "$dir"
				cd "${dir}"
			fi
			file=$(echo "$1" | rev | cut -d '/' -f1 | rev)

			pluma "$file" &
		else
			if [[ -d "$1" ]]; then
				cd $1
				 #2> tmp
				#rm -f tmp
				if [[ $? == 0 ]]; then
					gitk --all --date-order &
				else
					o
				fi
			else
				#Inexistent route, new file
				#mkdir -p "$1"
				if [[ ! -z $(echo "$1" | grep -Fo "/") ]]; then
					dir=$(echo "$1" | rev | cut -d '/' -f2- | rev)
					mkdir -p "${dir}"
					cd "${dir}"
					file=$(echo "$1" | rev | cut -d '/' -f1 | rev)
					pluma "${file}" &
				else
					pluma "$1" &
				fi
			fi
		fi
	fi
}


freezesession()
{

	tmuxp freeze $1
}


L()
{
  NEW_LINE=$'\n'
  lsdisplay=$(ls -lhA | tr -s " " | tail -n+2)
  numfiles=$(printf \"$lsdisplay\" | wc -l)
  dudisplay=$(du -shxc .[!.]* * | sort -h | tr -s "\t" " ")
  totaldu=$(echo ${dudisplay} | rev | cut -d " " -f2 | rev)
  finaldisplay="${totaldu} in ${numfiles} files and directories$NEW_LINE"
  IFS=$'\n'
  for linels in ${lsdisplay}; do
    if [[ $linels =~ ^d.* ]]; then
      foldername=$(echo $linels | cut -d ' ' -f9-)
      for linedu in ${dudisplay}; do
        if [[ "$(echo ${linedu} | cut -d ' ' -f2-)" = "${foldername}" ]]; then
          currentline=$(echo ${linels} | cut -d " " -f-4)
          currentline="$currentline $(echo ${linedu} | cut -d ' ' -f1)"
          currentline="$currentline $(echo ${linels} | cut -d ' ' -f6-)"
          finaldisplay="$finaldisplay$NEW_LINE$currentline"
          break
        fi
      done
    else
      finaldisplay="$finaldisplay$NEW_LINE$linels"
    fi
  done
  finaldisplay="${finaldisplay}$NEW_LINE$NEW_LINE"
  printf "$finaldisplay"
}


ltf() 
{
    ls ${HOME}/$*
}


o()
{
	if [[ -z "$1" ]]; then
		nemo "$(pwd)" &
	else
		nemo "$1"
	fi
}


session()
{	if [[ -z "$1.yaml" ]]; then
		tmuxp load $HOME/Escritorio/sessions/ses/$1.yaml
	else
		tmuxp load $HOME/Escritorio/sessions/ses/mysession.yaml
	fi
}


ta()
{
  if [[ -z $1 ]]; then
    tmux attach
  else
    tmux attach -t "$1"
  fi
}


td()
{
  tmux detach $1
}


trs()
{
	tmux rename-session $1
}


ts()
{
	tmux switch -t $1
}


tsend()
{
    tmux send -t "$1" "$2" Enter
}


tses()
{
	tmuxp load $HOME/Escritorio/sessions/ses/$1.json
}


tsesconvert()
{
	tmuxp convert -y $1
}


tsk() 
{
CONTADOR=0

while [ "$*" ]
do
	if [[ $1 == "default" ]]; then
	  shift
	else
	  let CONTADOR=$CONTADOR+1
	  tmux kill-session -t $1 
    shift
  fi
    
done
}



mkcd()
{
    mkdir -p $1
    cd $1
}

